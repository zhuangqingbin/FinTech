# IP
## IP地址是网络中唯一标记一台计算机（4 * 8位）
## 四台计算机通过交换机形成局域网，每个IP地址包括网络地址和主机地址
## 网络号标识当前计算机处于哪个网络中（一个局域网里所有的计算机的网络号都是一样的）
## 主机号的作用是标识当前计算机是网络当中的第几台（局域网中主机号不重复）
### 以C类IP为例，前三字节（21位）标识网络号（最高位110），后一字节（8位）标识主机号
### 主机号2**8（0-255）其中0（没有主机号）、255（广播地址）不可用

## 私有ip
### 本地局域网上的IP，专门是组织内部使用
## 公有ip
### 全球使用

# 子网掩码（区分IP地址网络号和主机号）4字节*8位
## 本身不单独存在，必须和IP地址存在
## 比如C类IP，子网掩码位255。255。255。0表示前3个字节是网络号，第4个字节是主机号
## 比如B类IP，子网掩码位255。255。0。0表示前2个字节是网络号，第3、4个字节是主机号
## 比如A类IP，子网掩码位255。0。0。0表示前1个字节是网络号，第2、3、4个字节是主机号

# 端口号（用来区分进程）0-65535
## 通过IP地址找计算机，通过端口号找到这个计算机的进程通信
## 知名端口 0-1023（80：HTTP服务；21：FTP服务）
## 动态端口（动态分配的进程）

# 协议
## 互联网协议簇（各个品牌的厂商的共同协议）100多种
## TCP/IP协议簇，定义了电子设备如何连入互联网以及数据如何在他们之间传输的一种标准
### 网络接口层
### 网络层
### 传输层
### 应用层，

# socket
## 通过网络完成进程之间的通信的方式
## 应用层和传输层之间的桥梁
### 应用层封装好数据（比如QQ上写"你好"）之后交给socket，socket拿到数据之后继续传递给传输层
### 到了另一台机器再解析到应用层
## 本质是编程接口（API），是对TCP/IP的封装
## 嵌套字之间的连接过程分为：
### 1、服务器监听
### 2、客户端请求
### 3、连接确认
import socket
# 第一个参数IPV4协议，
# 第二个参数确定TCP和UDP（SOCK_DGRAM）
## UDP用户数据报协议，无连接的简单面对数据报的协议
##（不确定接受是否能收到，不保证一定收得到，无超时重发，所以快）
## 用于实时场景（QQ视频）
## TCP传输控制协议，面向连接的协议
## 一个TCP连接必须经过三次对话才能连接起来
## 1、A向B发送数据包，请求连接
## 2、B向A发送同意的连接
## 3、A在收到B的数据包之后确定数据连接完成
## 之后正式开始数据收发（可以保证接受的顺序
## 发送方和接收方必须同时用UDP或者TCP

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#
# s.sendto('你好'.encode(), ('192.168.199.241',8083))

# 绑定端口
s.bind(('192.168.199.241',8077))
# 接受最大字节数位1024
redata = s.recvfrom(1024)
print(redata)
print(redata[0].decode('gbk'))
s.sendto(redata[0], redata[1])
s.close()

